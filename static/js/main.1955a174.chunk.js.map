{"version":3,"sources":["Components/FilterOptions.js","Components/CustomerTrans.js","Components/CustomerForm.js","index.js"],"names":["FilterOptions","props","submitForm","event","preventDefault","submitFilter","state","changeOption","setState","target","name","value","console","log","customer","year","month","Container","Form","onSubmit","this","Row","Group","lg","Label","Control","as","id","onChange","customerOption","map","option","key","yearOption","monthOption","type","width","Component","CustomerTrans","Table","responsive","colSpan","Badge","variant","totalRewards","striped","bordered","hover","data","item","i","store","date","amountSpend","points","totalMonthlyRewards","CustomerForm","filteredItems","customerTrans","trans","over100","Date","getMonth","filter","firstName","lastName","reduce","total","fullYear","getFullYear","fullName","parse","indexOf","filterdItems","loading","customerdata","custdata","Set","unshift","setTimeout","length","Alert","App","transaction","render","document","getElementById"],"mappings":"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","file":"static/js/main.1955a174.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n\r\nclass FilterOptions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      customer:'',\r\n      year:'',\r\n      month:''\r\n    }\r\n  }\r\n\r\n  \r\n  submitForm=(event)=>{\r\n    event.preventDefault();\r\n    this.props.submitFilter(this.state);\r\n  }\r\n  changeOption =(event)=>{\r\n    this.setState(\r\n      {\r\n        [event.target.name]:event.target.value},\r\n        ()=>{console.log(this.state)}\r\n      )\r\n    }  \r\n  render(){\r\n    \r\n    return(\r\n        <Container>\r\n        <Form onSubmit={this.submitForm}>\r\n          <Form.Row>\r\n            <Form.Group  lg=\"4\" >\r\n              <Form.Label>Customer</Form.Label>\r\n              <Form.Control as=\"select\"\r\n                id=\"customer\"  name=\"customer\" value={this.state.customer} onChange={this.changeOption}>\r\n                {this.props.customerOption.map(function(option) {\r\n                  return ( <option key={option} value={option}>{option}</option> )\r\n                })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group  lg=\"2\">\r\n              <Form.Label>Year</Form.Label>\r\n              <Form.Control as=\"select\"\r\n              id=\"year\" name=\"year\" value={this.state.year} onChange={this.changeOption}>\r\n              {this.props.yearOption.map(function(option) {\r\n                return ( <option key={option} value={option}>{option}</option> )\r\n              })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group  lg=\"2\">\r\n              <Form.Label>Month</Form.Label>\r\n                <Form.Control as=\"select\"\r\n                  id=\"month\" name=\"month\" value={this.state.month} onChange={this.changeOption}>\r\n                  {this.props.monthOption.map(function(option) {\r\n                    return ( <option key={option} value={option}>{option}</option> )\r\n                  })}\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group  lg=\"4\">\r\n              <Form.Label>&nbsp;</Form.Label>\r\n                <Form.Control as=\"button\" type=\"submit\" width=\"250\" id=\"submit\">\r\n                  Submit\r\n                </Form.Control>\r\n            </Form.Group>\r\n          </Form.Row>\r\n        </Form>\r\n        </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FilterOptions;","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\nconst CustomerTrans =(props)=>{\r\n  console.log(props);\r\n  return( <div>\r\n    <Table responsive> \r\n      <thead>\r\n          <tr>\r\n              <th colSpan=\"3\" width=\"450px\">&nbsp;</th>\r\n              <th>\r\n                <Badge  variant=\"primary\">\r\n                  Total Customer Rewards : {props.totalRewards}\r\n                </Badge>\r\n              </th>\r\n            </tr>\r\n      </thead>\r\n    </Table>\r\n    <Table  responsive striped bordered hover variant=\"light\"> \r\n      <thead>\r\n            <tr>\r\n              <th>Transaction</th>\r\n              <th>Date</th>\r\n              <th>Amount Spend</th>\r\n              <th>REWARD</th>\r\n              \r\n            </tr>\r\n        </thead>\r\n      {props.data.map((item,i)=>{\r\n          console.log(item)\r\n          \r\n        return (\r\n          <tbody key = {i} id = {i}>\r\n            <tr>\r\n              <td>{item.store}</td>\r\n              <td>{item.date}</td>\r\n              <td>{item.amountSpend}</td>\r\n              <td>{item.points}</td>\r\n            </tr>\r\n          </tbody>\r\n          );\r\n      })}\r\n    </Table>\r\n      <Table > \r\n      <thead>\r\n          <tr>\r\n              <th colSpan=\"3\" width=\"450\">&nbsp;</th>\r\n              <th>\r\n                <Badge  variant=\"info\">\r\n                  Total Monthly Rewards : {props.totalMonthlyRewards}\r\n                </Badge>\r\n              </th>\r\n            </tr>\r\n      </thead>\r\n      </Table>\r\n    </div>\r\n    \r\n    )\r\n\r\n}\r\n  \r\nexport default CustomerTrans;","import React, { Component } from 'react';\r\nimport '../style.css';\r\n\r\nimport FilterOptions from './FilterOptions';\r\nimport CustomerTrans from './CustomerTrans';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n\r\nclass CustomerForm extends Component {\r\n  constructor(props) {\r\n   \r\n    super(props);\r\n    this.state={\r\n      loading:false,\r\n      data:this.props.data,\r\n      customer:[],\r\n      year:[],\r\n      month:[\"\",\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"June\",\"July\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\r\n      filterdItems:[],\r\n      totalMonthlyRewards:0,\r\n      totalRewards:0\r\n    }\r\n  }\r\n\r\n  submitFilter=(data)=>{\r\n    \r\n    let filteredItems = this.props.data;\r\n\r\n    const customerTrans = filteredItems.map(trans=> {\r\n      let points = 0;\r\n      let over100 = trans.amountSpend - 100;\r\n      if (over100 > 0) {\r\n        // A customer receives 2 points for every dollar spent over $100 in each transaction  \r\n        // plus 1 point for every dollar spent over $50 in each transaction    \r\n        points += (over100 * 2) + 1 * 50;\r\n      }    \r\n      if (trans.amountSpend > 50 && trans.amountSpend < 100 ) {\r\n        // plus 1 point for every dollar spent over $50 in each transaction\r\n        points += (trans.amountSpend * 1) - 50;      \r\n      }\r\n      const month = new Date(trans.date).getMonth();\r\n      return {...trans, points, month};\r\n    });\r\n   \r\n    let  totalRewards =customerTrans.filter(item => {\r\n      let fullName = item.firstName + \" \" + item.lastName\r\n      return fullName === data.customer\r\n      }\r\n    ).reduce((total, item) => total + item.points,0);\r\n\r\n  \r\n   \r\n    filteredItems = customerTrans.filter(item=>{\r\n      let fullYear = (new Date(item.date)).getFullYear();\r\n      let fullName = item.firstName + \" \" + item.lastName;\r\n      let month = (new Date(item.date)).getMonth() + 1;\r\n      \r\n      return (Date.parse(fullYear) === Date.parse(data.year)) &&\r\n             (fullName === data.customer) &&\r\n             (Date.parse(month) === Date.parse(this.state.month.indexOf(data.month)))\r\n      });\r\n      \r\n    let totalMonthlyRewards=filteredItems.reduce((total,item)=>total+ item.points,0);\r\n\r\n    this.setState({filterdItems:[...filteredItems],totalMonthlyRewards,totalRewards})\r\n  }\r\n\r\n   componentDidMount(){\r\n\r\n    const customerdata = this.props.data\r\n                        .map(custdata => {\r\n                          let fullName=custdata.firstName + \" \" + custdata.lastName;\r\n                          let year= (new Date(custdata.date)).getFullYear();\r\n                          return {fullName,year};\r\n                        });\r\n\r\n           \r\n    let customer = [...new Set(customerdata.map(custdata=>custdata.fullName))];\r\n        customer.unshift(\"\");   \r\n     \r\n      let year = [...new Set(customerdata.map(custdata=>custdata.year))];\r\n      year.unshift(\"\"); \r\n     \r\n      //simulate the loading...from server..\r\n      setTimeout(()=>{\r\n        this.setState({\r\n          customer:[...customer],\r\n          year:[...year],\r\n          loading:true\r\n        },console.log(this.state.customerdata));\r\n      },1000)\r\n   \r\n\r\n   }\r\n   \r\n  render(){\r\n   \r\n   return(<div>\r\n     {\r\n       !this.state.loading ?  <Alert variant=\"primary\">Loading....!!</Alert> :\r\n      <div>\r\n      <h4>Customer Transactions..</h4>\r\n       <FilterOptions \r\n            data = {this.state.data} \r\n            customerOption = {this.state.customer} \r\n            yearOption = {this.state.year}\r\n            monthOption = {this.state.month}\r\n            submitFilter = {this.submitFilter}\r\n        />\r\n        {\r\n         this.state.filterdItems.length !== 0 ?\r\n          <CustomerTrans  \r\n              data = {this.state.filterdItems} \r\n              totalMonthlyRewards = {this.state.totalMonthlyRewards}\r\n              totalRewards = {this.state.totalRewards} \r\n          /> :\r\n          <Alert variant=\"warning\">No data Found..!! Please select and submit</Alert>\r\n        }\r\n      </div>\r\n      }\r\n    </div>)\r\n  }\r\n}\r\n  export default CustomerForm;","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style.css';\n\nimport CustomerForm from './Components/CustomerForm';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      transaction:[\n        {firstName:\"John\", lastName:\"Doe\", store:\"Walmart\", amountSpend:120, date: \"12/1/2019\"}, \n        {firstName:\"John\", lastName:\"Doe\", store:\"Taget\", amountSpend:50, date: \"12/1/2019\"},\n        {firstName:\"John\", lastName:\"Doe\", store:\"StainMart\", amountSpend:90, date: \"12/1/2019\"},\n\n         {firstName:\"John\", lastName:\"Doe\", store:\"Walmart\", amountSpend:120, date: \"11/1/2019\"}, \n        {firstName:\"John\", lastName:\"Doe\", store:\"Taget\", amountSpend:70, date: \"11/1/2019\"},\n        {firstName:\"John\", lastName:\"Doe\", store:\"StainMart\", amountSpend:50, date: \"11/1/2019\"},\n\n        {firstName:\"Micheal\", lastName:\"Taylor\", store:\"Walmart\", amountSpend:120, date: \"11/15/2019\"},{firstName:\"Micheal\", lastName:\"Taylor\", store:\"Target\", amountSpend:60, date: \"11/16/2019\"},\n        {firstName:\"Micheal\", lastName:\"Taylor\", store:\"StainMart\", amountSpend:30, date: \"11/18/2019\"},\n        {firstName:\"Micheal\", lastName:\"Taylor\", store:\"Walmart\", amountSpend:120, date: \"12/15/2019\"},{firstName:\"Micheal\", lastName:\"Taylor\", store:\"Target\", amountSpend:80, date: \"12/16/2019\"},\n        {firstName:\"Micheal\", lastName:\"Taylor\", store:\"StainMart\", amountSpend:50, date: \"12/18/2019\"},\n    ]\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <CustomerForm data = {this.state.transaction} />\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}